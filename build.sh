#!/bin/bash
# build.sh - Скрипт для замены плейсхолдера версией из Git коммита

# --- Начало Скрипта ---
echo "--- Запуск скрипта сборки (build.sh) ---"

# Немедленно выходить, если команда завершилась с ошибкой
set -e

# 1. Определяем плейсхолдер, который используется в ваших файлах
# Убедитесь, что он точно совпадает с тем, что у вас в index.html и Constants.js
PLACEHOLDER="__GIT_HASH__"

# 2. Получаем короткий хэш текущего Git коммита
# Исполняем `git rev-parse --short HEAD`.
# `2>/dev/null` подавляет вывод ошибок, если это не Git репозиторий.
# `|| echo "localdev"`: Если команда git не удалась, используем строку "localdev" как запасной вариант.
# Это полезно, если вы запускаете скрипт локально вне Git репозитория.
COMMIT_HASH=$(git rev-parse --short HEAD 2>/dev/null || echo "localdev")

# Выводим хэш, который будет использоваться
echo "Используемый хэш версии: $COMMIT_HASH"

# 3. Ищем и заменяем плейсхолдер во всех нужных файлах
echo "Поиск файлов для обновления (.html, .js)..."

# Ищем все файлы с расширением .html или .js в текущей директории (.) и поддиректориях.
# -path ./.git -prune -o : Исключает директорию .git из поиска.
# -path ./node_modules -prune -o : Исключает директорию node_modules (если вы ее используете). Добавьте другие, если нужно.
# -type f : Искать только файлы.
# \( -name '*.html' -o -name '*.js' \) : Искать файлы с нужными расширениями.
# -print0 : Печатает найденные имена файлов, разделенные нулевым символом (для безопасности имен с пробелами/спецсимволами).
# xargs -0 : Читает имена файлов, разделенные нулевым символом.
# sed -i "s/${PLACEHOLDER}/${COMMIT_HASH}/g" : Выполняет замену прямо в найденных файлах (`-i` = inplace).
#   `s/ШАБЛОН/ЗАМЕНА/g` : Заменяет (`s`) все (`g`) вхождения ШАБЛОНА на ЗАМЕНУ.
#   Используются двойные кавычки, чтобы переменная $COMMIT_HASH была подставлена.

find . -path ./.git -prune -o -path ./node_modules -prune -o -type f \( -name '*.html' -o -name '*.js' \) -print0 | xargs -0 sed -i "s/${PLACEHOLDER}/${COMMIT_HASH}/g"

echo "Замена плейсхолдера '$PLACEHOLDER' на '$COMMIT_HASH' в найденных файлах завершена."

# --- Сюда можно добавить другие команды сборки, если они нужны ---
# Например, если бы вы использовали npm для сборки:
# echo "Установка зависимостей..."
# npm install
# echo "Сборка проекта..."
# npm run build
# --------------------------------------------------------------

echo "--- Скрипт сборки успешно завершен ---"
echo "ВАЖНО: Не забудьте убедиться, что ассеты (картинки, звуки), загружаемые в Phaser через preload(), также используют этот хэш (например, беря его из Constants.js после того, как этот скрипт его туда подставит)."

# Выход с кодом 0 (успех)
exit 0